{"version":3,"sources":["0_querys.js","1_paint.js","2_search.js","3_fav_characters.js","4_ls.js","5_delete.js","6_reset.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["// querySelector\n\nconst input = document.querySelector(\".js-input \");\nconst btn = document.querySelector(\".js-button-search\");\nconst favourites = document.querySelector(\".js-favouritesList\");\nconst results = document.querySelector(\".js-resultsList\");\nconst reset = document.querySelector(\".js-reset\");\n\n// Variables globales(Variables con datos de la app, array de objetos)\nlet actors = [];\nlet favouriteCharacters = [];\n","// Petición al servidor con fetch y función para pintar los personajes en la web\n\nfunction renderCharacters() {\n  let html = \"\";\n  let classFav = \"\";\n\n  for (const characters of actors) {\n    const oneFavouriteIndex = favouriteCharacters.findIndex(\n      (eachCharactersObj) =>\n        eachCharactersObj.char_id === parseInt(characters.char_id)\n    );\n    if (oneFavouriteIndex === -1) {\n      classFav = \"\";\n    } else {\n      classFav = \"selected\";\n    }\n\n    html += `<li>\n      <article class =\"${classFav} article js-articles\" id= \"${characters.char_id}\">\n      <img class=\"img\" src=${characters.img}>\n      <h3 class = \"name\"> ${characters.name}</h3>\n      <p class = \"status\">${characters.status}</p>\n      </article>\n      </li>`;\n  }\n\n  results.innerHTML = html;\n  addCharactersEvent();\n}\n\nfetch(\"./assets/data/characters.json\")\n  .then((response) => response.json())\n  .then((dataResult) => {\n    actors = dataResult;\n    getFavFromLocal();\n    renderFavourites();\n    renderCharacters();\n  });\n","// Evento y función manejadora para buscar personajes.\n//  La petición de búsqueda se ha hecho con petición al servidor. Mirar TolowerCase\n// La petición se solicita dentro de la función porque queremos que nos busque el personaje\n// cuando hagamos click\n\nfunction handleClickSearch(ev) {\n  ev.preventDefault();\n\n  const searchValue = input.value.toLowerCase();\n\n  fetch(`https://breakingbadapi.com/api/characters?name=${searchValue}`)\n    .then((response) => response.json())\n    .then((data) => {\n      actors = data;\n      renderCharacters(actors);\n    });\n}\n\nbtn.addEventListener(\"click\", handleClickSearch);\n","\"use strict\";\n// Seleccionar personaje favorito.\n// Con esta función añado el evento a cada personaje.\n// La ejecuto aquí pero la llamo 1_paint para que me pinte a los personajes\n\nfunction addCharactersEvent() {\n  const allArticles = document.querySelectorAll(\".js-articles\");\n  for (const eachArticles of allArticles) {\n    eachArticles.addEventListener(\"click\", handleArticles);\n  }\n  function handleArticles(ev) {\n    ev.currentTarget.classList.toggle(\"selected\");\n\n    const selectFav = actors.find(\n      (eachCharactersObj) =>\n        eachCharactersObj.char_id === parseInt(ev.currentTarget.id)\n    );\n\n    const oneFavouriteIndex = favouriteCharacters.findIndex(\n      (eachCharactersObj) =>\n        eachCharactersObj.char_id === parseInt(ev.currentTarget.id)\n    );\n\n    if (oneFavouriteIndex === -1) {\n      favouriteCharacters.push(selectFav);\n\n      // (-1 porque no existe y por lo tanto como no existe me lo pinta)\n    } else {\n      favouriteCharacters.splice(oneFavouriteIndex, 1);\n\n      // oneFavouriteIndex nos dice el indexedDB, en que posición está el objeto, y solo queremos quitar uno\n    }\n\n    localStorage.setItem(\"favourites\", JSON.stringify(favouriteCharacters));\n\n    renderFavourites();\n  }\n}\n\n// funcion para pintar los personajes favoritos.\n// Se desarrolla aqui pero la llamamos en la funcion manejadora\nfunction renderFavourites() {\n  let html = \"\";\n\n  for (const characters of favouriteCharacters) {\n    html += `<li>\n        <article class =\"article-fav js-articlesFav\" >\n        <i class=\"js-bDelete fa-solid fa-xmark card__icon\" id= \"${characters.char_id}\"> </i>\n        <img class=\"img-fav\" src=${characters.img}>\n        <h3 class = \"name-fav\"> ${characters.name}</h3>\n        <p class = \"status-fav\">${characters.status}</p>\n        </article>\n        </li>`;\n  }\n\n  favourites.innerHTML = html;\n  addIconsEvent();\n}\n","// Añado setItem a la condicional de favoritos y luego creo una nueva variable para recuperarlas y que se queden pintadas.al final de la pag\n\n// Te tengo que crear una condicional porque sino me da error. Me dice que esos valores son nulos, por lo tanto creo una condicional donde digo que si es diferente de null me los pinte\nfunction getFavFromLocal() {\n  const savedFavourites = JSON.parse(localStorage.getItem(\"favourites\"));\n  if (savedFavourites !== null) {\n    favouriteCharacters = savedFavourites;\n    renderFavourites();\n  }\n}\n\n// La condicional para que los actores fav se mantengan con el selectd se encuentran dentro de la funcion render de fav, que es quien la pinta\n","// Creo un evento para todos lo iconos\n// hago la función manejadora y dentro un bucle\n// comparo el id de cual quito y donde pincho\n// y mando pintar\n\nfunction addIconsEvent() {\n  const icons = document.querySelectorAll(\".js-bDelete\");\n  for (const eachIcons of icons) {\n    eachIcons.addEventListener(\"click\", handleIcons);\n  }\n}\nfunction handleIcons(ev) {\n  const deleteFav = favouriteCharacters.findIndex(\n    (eachCharactersObj) =>\n      eachCharactersObj.char_id === parseInt(ev.currentTarget.id)\n  );\n\n  favouriteCharacters.splice(deleteFav, 1);\n\n  localStorage.setItem(\"favourites\", JSON.stringify(favouriteCharacters));\n  renderFavourites();\n  renderCharacters();\n}\n","function handleReset() {\n  favouriteCharacters = [];\n  renderFavourites();\n  renderCharacters();\n  localStorage.removeItem(\"favourites\");\n}\n\nreset.addEventListener(\"click\", handleReset);\n"]}